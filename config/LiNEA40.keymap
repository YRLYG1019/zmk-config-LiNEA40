#define ZMK_POINTING_DEFAULT_SCRL_VAL 150

#include <dt-bindings/zmk/input_transform.h>
#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 1
#define MARK 2
#define CURSOR 3
#define FUNCTION 4
#define SCROLL 5
#define WIRELESS 6

//mouse cursol

&mmv {
    delay-ms = <20>;
    trigger-period-ms = <5>;
    time-to-max-speed-ms = <100>;
    acceleration-exponent = <2>;
};

//mouse scroll

&msc {
    delay-ms = <3>;
    trigger-period-ms = <3>;
    time-to-max-speed-ms = <100>;
    acceleration-exponent = <0>;
};

/ {
    input_processors {
        zip_wheel_scaler: zip_wheel_scaler {
            compatible = "zmk,input-processor-scaler";
            #input-processor-cells = <2>;
            type = <INPUT_EV_REL>;
            codes = <INPUT_REL_WHEEL>;
            track-remainders;
        };
    };
};

&msc_input_listener {
    speed_up {
        layers = <FUNCTION>;
        input-processors = <&zip_wheel_scaler 3 1>; //スクロールを3倍速にする
    };
};

&trackball_listener {
    scroller {
        layers = <SCROLL>;
        input-processors =
            <&zip_xy_transform INPUT_TRANSFORM_Y_INVERT>,
            //スクロール方向を逆転,,,,,
            <&zip_xy_to_scroll_mapper>;
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        spc {
            bindings = <&kp SPACE>;
            key-positions = <11 12>;
        };

        sspc {
            bindings = <&kp LS(SPACE)>;
            key-positions = <1 2>;
        };

        cap {
            bindings = <&kp CAPSLOCK>;
            key-positions = <0 1>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <12 13>;
        };

        home {
            bindings = <&kp HOME>;
            key-positions = <15 16>;
        };

        end {
            bindings = <&kp END>;
            key-positions = <25 26>;
        };

        bs {
            bindings = <&kp BACKSPACE>;
            key-positions = <16 17>;
        };

        ent {
            bindings = <&kp ENTER>;
            key-positions = <17 18>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <8 9>;
        };

        pgup {
            bindings = <&kp PAGE_UP>;
            key-positions = <26 27>;
        };

        pgdn {
            bindings = <&kp PAGE_DOWN>;
            key-positions = <27 28>;
        };
    };

    behaviors {
        re_kp: sensor_rotate_kp {
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        mouse_scrl: mouse_wheel_scrl {
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q          &kp L           &kp U               &kp COMMA         &kp PERIOD                                        &kp F            &kp W              &kp R                 &kp Y                  &kp P
&kp E          &mt LEFT_ALT I  &mt LEFT_CONTROL A  &mt LEFT_SHIFT O  &mt LEFT_GUI MINUS                                &mt RIGHT_GUI K  &mt RIGHT_SHIFT T  &mt RIGHT_CONTROL N   &mt RIGHT_ALT S        &kp H
&kp SLASH      &kp Z           &kp X               &kp C             &kp V                                             &kp G            &kp D              &kp M                 &kp J                  &kp B
&mt LCTRL ESC  &kp LEFT_WIN    &mo 6               &kp INS           &lt 1 SPACE         &lt 3 TAB    &lt 1 BACKSPACE  &lt 2 ENTER                         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp ESC
            >;

            sensor-bindings = <&mouse_scrl SCRL_DOWN SCRL_UP>;
        };

        //1

        MOUSE {
            bindings = <
&kp F1            &kp F2    &kp F3    &kp F4    &kp F5                     &kp F6    &sk F7         &kp F8       &kp F9         &kp F10
&kp LEFT_CONTROL  &mkp MB3  &mkp MB2  &mkp MB1  &kp F11                    &kp HOME  &kp PAGE_UP    &kp INS      &kp SEMICOLON  &kp RIGHT_CONTROL
&kp LEFT_SHIFT    &mkp MB4  &mkp MB5  &trans    &kp F12                    &kp END   &kp PAGE_DOWN  &kp LC(INS)  &kp COLON      &kp RIGHT_SHIFT
&trans            &trans    &trans    &trans    &trans   &trans    &trans  &trans                   &trans       &trans         &trans
            >;

            sensor-bindings = <&re_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        //2

        MARK {
            bindings = <
&kp NUMBER_1      &kp NUMBER_2     &kp NUMBER_3          &kp NUMBER_4  &kp NUMBER_5                    &kp NUMBER_6  &kp NUMBER_7    &kp NUMBER_8    &kp NUMBER_9     &kp N0
&kp LEFT_CONTROL  &kp SLASH        &kp ASTERISK          &kp PERIOD    &kp EQUAL                       &kp LEFT      &kp DOWN_ARROW  &kp UP_ARROW    &kp RIGHT_ARROW  &kp RIGHT_CONTROL
&kp LEFT_SHIFT    &kp KP_NUMBER_1  &kp NON_US_BACKSLASH  &kp APOS      &kp GRAVE                       &kp DELETE    &kp BACKSPACE   &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LS(RIGHT_SHIFT)
&trans            &trans           &trans                &trans        &kp LEFT_ALT  &trans    &trans  &trans                        &trans          &trans           &trans
            >;

            sensor-bindings = <&mouse_scrl SCRL_LEFT SCRL_RIGHT>;
        };

        //3

        CURSOR {
            bindings = <
&trans    &kp LC(LG(LEFT_ARROW))  &kp UP_ARROW  &kp LC(LG(RIGHT_ARROW))  &trans                       &kp KP_MULTIPLY  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp KP_PLUS
&trans    &kp LEFT_ARROW          &kp DOWN      &kp RIGHT_ARROW          &trans                       &kp KP_SLASH     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp KP_MINUS
&kp HOME  &kp PAGE_DOWN           &kp END       &kp PAGE_UP              &trans                       &kp UNDER        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp ENTER
&trans    &trans                  &trans        &trans                   &trans  &trans    &kp ENTER  &kp NUMBER_0                   &kp DOT       &kp ENTER     &kp QUESTION
            >;
        };

        //4

        FUNCTION {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4   &kp F5                     &kp F6      &kp F7  &kp F8         &kp F9  &kp F10
&kp F6  &kp F7  &kp F8  &kp F9   &kp F11                    &trans      &trans  &kp LS(LG(S))  &trans  &kp LC(LS(ESCAPE))
&trans  &trans  &trans  &kp F11  &kp F12                    &kp C_MUTE  &trans  &trans         &trans  &kp LC(LA(INS))
&trans  &trans  &trans  &trans   &trans   &trans    &trans  &trans              &trans         &trans  &trans
            >;

            sensor-bindings = <&mouse_scrl SCRL_DOWN SCRL_UP>;
        };

        //5

        SCROLL {
            bindings = <
&trans    &kp LC(LG(LEFT_ARROW))  &kp UP_ARROW  &kp LC(LG(RIGHT_ARROW))  &trans                    &kp KP_MULTIPLY  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp KP_PLUS
&trans    &kp LEFT_ARROW          &kp DOWN      &kp RIGHT_ARROW          &trans                    &kp KP_SLASH     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp KP_MINUS
&kp HOME  &kp PAGE_DOWN           &kp END       &kp PAGE_UP              &trans                    &kp UNDER        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp ENTER
&trans    &trans                  &trans        &trans                   &trans  &trans    &trans  &kp NUMBER_0                   &kp NUMBER_0  &kp DOT       &kp QUESTION
            >;

            sensor-bindings = <&inc_dec_kp UP_ARROW DOWN_ARROW>;
        };

        //6

        WIRELESS {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                         &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans        &trans        &trans        &trans        &trans                               &trans          &trans        &trans        &trans        &trans
&trans        &trans        &trans        &trans        &trans                               &trans          &trans        &trans        &trans        &bt BT_CLR
&trans        &trans        &trans        &trans        &trans        &trans    &bootloader  &studio_unlock                &trans        &trans        &bt BT_CLR_ALL
            >;

            sensor-bindings = <&inc_dec_kp LEFT_ARROW RIGHT_ARROW>;
        };
    };
};
